{"version":3,"file":"static/js/399.0c8496c6.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Contacts.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/selectors';\nimport { Button, Box, TextField, Container } from '@mui/material';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const findContact = contacts.find(contact => contact.name === name);\n    if (findContact) {\n      alert('Already in Contacts');\n      return;\n    }\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContact(newContact));\n    event.target.reset();\n  };\n\n  return (\n    <>\n      <Container\n        maxWidth=\"sm\"\n        sx={{ display: 'flex', justifyContent: 'center', paddingTop: '50px' }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '20px',\n            alignItems: 'center',\n            marginBottom: '50px',\n          }}\n          onSubmit={handleSubmit}\n          component=\"form\"\n        >\n          <TextField\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id=\"outlined-name-text\"\n            label=\"Name\"\n            variant=\"standard\"\n            sx={{ width: '320px' }}\n          />\n          <TextField\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id=\"outlined-number-tel\"\n            label=\"Number\"\n            variant=\"standard\"\n            sx={{ width: '320px' }}\n          />\n          <Button\n            variant=\"outlined\"\n            type=\"submit\"\n            color=\"inherit\"\n            sx={{ width: '150px', color: '#b553ab' }}\n          >\n            Add contact\n          </Button>\n        </Box>\n      </Container>\n\n      {/* <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label> */}\n    </>\n  );\n};\n","import { filterContact } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <TextField\n        type=\"text\"\n        name=\"text\"\n        id=\"outlined-text\"\n        label=\"find contacts by name\"\n        sx={{ width: '320px' }}\n        onChange={e => dispatch(filterContact(e.target.value))}\n        variant=\"standard\"\n      />\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/selectors';\nimport { IconButton, ListItem, List, ListItemText } from '@mui/material';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const filter = useSelector(state => state.filter);\n  const filteredContactsList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <>\n      <List sx={{ width: '320px', margin: '0 auto', paddingTop: '40px' }}>\n        {filteredContactsList.map(({ name, number, id }) => (\n          <ListItem key={id}>\n            <ListItemText>\n              {name}: {number}\n            </ListItemText>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              type=\"button\"\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n              variant=\"outlined\"\n              sx={{ color: '#b553ab' }}\n            >\n              <PersonRemoveIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoaderStyle = styled.span`\n  transform: rotateZ(45deg);\n  perspective: 1000px;\n  border-radius: 50%;\n  width: 200px;\n  height: 200px;\n  color: green;\n  font-size: 52px;\n  &:before,\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: inherit;\n    height: inherit;\n    border-radius: 50%;\n    transform: translate(-50%, -50%) rotateX(70deg);\n    animation: 0.7s spin linear infinite;\n  }\n  &:after {\n    color: #ff3d00;\n    transform: translate(-50%, -50%) rotateY(70deg);\n    animation-delay: 0.2s;\n  }\n\n  @keyframes rotate {\n    0% {\n      transform: translate(-50%, -50%) rotateZ(0deg);\n    }\n    100% {\n      transform: translate(-50%, -50%) rotateZ(360deg);\n    }\n  }\n\n  @keyframes rotateccw {\n    0% {\n      transform: translate(-50%, -50%) rotate(0deg);\n    }\n    100% {\n      transform: translate(-50%, -50%) rotate(-360deg);\n    }\n  }\n\n  @keyframes spin {\n    0%,\n    100% {\n      box-shadow: 0.2em 0px 0 0px currentcolor;\n    }\n    12% {\n      box-shadow: 0.2em 0.2em 0 0 currentcolor;\n    }\n    25% {\n      box-shadow: 0 0.2em 0 0px currentcolor;\n    }\n    37% {\n      box-shadow: -0.2em 0.2em 0 0 currentcolor;\n    }\n    50% {\n      box-shadow: -0.2em 0 0 0 currentcolor;\n    }\n    62% {\n      box-shadow: -0.2em -0.2em 0 0 currentcolor;\n    }\n    75% {\n      box-shadow: 0px -0.2em 0 0 currentcolor;\n    }\n    87% {\n      box-shadow: 0.2em -0.2em 0 0 currentcolor;\n    }\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalStyle = styled.div`\n  max-width: calc(100vw - 58px);\n  max-height: calc(100vh - 34px);\n`;\n","import React from 'react';\nimport { LoaderStyle, Overlay } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Overlay>\n      <LoaderStyle></LoaderStyle>\n    </Overlay>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getIsLoading, getError } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Typography, Container } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container maxWidth=\"sm\" sx={{ paddingTop: '50px', textAlign: 'center' }}>\n        <Typography\n          variant=\"h3\"\n          component=\"h2\"\n          sx={{\n            flexGrow: 1,\n            display: { xs: 'none', sm: 'block', textAlign: 'center' },\n          }}\n        >\n          Phonebook\n        </Typography>\n        <ContactForm />\n        <Filter />\n        {isLoading && <Loader />}\n        <ContactList />\n        {error && <p>{error}</p>}\n      </Container>\n    </>\n  );\n}\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","Container","maxWidth","sx","display","justifyContent","paddingTop","Box","flexDirection","gap","alignItems","marginBottom","onSubmit","event","preventDefault","name","target","elements","value","number","find","contact","alert","newContact","addContact","reset","component","TextField","type","pattern","title","required","id","label","variant","width","Button","color","Filter","onChange","e","filterContact","ContactList","filter","state","filteredContactsList","toLowerCase","includes","List","margin","map","ListItem","ListItemText","IconButton","edge","onClick","deleteContact","PersonRemove","LoaderStyle","styled","Overlay","Loader","Contacts","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","textAlign","Typography","flexGrow","xs","sm"],"sourceRoot":""}